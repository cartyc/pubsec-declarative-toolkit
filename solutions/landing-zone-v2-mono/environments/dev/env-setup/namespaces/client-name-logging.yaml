# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata: # kpt-merge: client-name-config-control/client-name-logging-sa
  name: client-name-logging-sa # kpt-set: ${client-name}-logging-sa
  namespace: client-name-config-control # kpt-set: ${client-name}-${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: client-management-project-id # kpt-set: ${client-management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMServiceAccount|client-name-config-control|client-name-logging-sa'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg'
spec:
  displayName: client-name-logging-sa # kpt-set: ${client-name}-logging-sa
---
# Grant GCP role Logging Admin to GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: hierarchy/client-name-logging-sa-logadmin-permissions
  name: client-name-logging-sa-logadmin-permissions # kpt-set: ${client-name}-logging-sa-logadmin-permissions
  namespace: hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|hierarchy|client-name-logging-sa-logadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    name: clients.client-name # kpt-set: clients.${client-name}
  role: roles/logging.admin
  member: "serviceAccount:client-name-logging-sa@client-management-project-id.iam.gserviceaccount.com" # kpt-set: serviceAccount:${client-name}-logging-sa@${client-management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role BigQuery Admin to GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: hierarchy/client-name-logging-sa-bigqueryadmin-permissions
  name: client-name-logging-sa-bigqueryadmin-permissions # kpt-set: ${client-name}-logging-sa-bigqueryadmin-permissions
  namespace: hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|hierarchy|client-name-logging-sa-bigqueryadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    name: clients.client-name # kpt-set: clients.${client-name}
  role: roles/bigquery.admin
  member: "serviceAccount:client-name-logging-sa@client-management-project-id.iam.gserviceaccount.com" # kpt-set: serviceAccount:${client-name}-logging-sa@${client-management-project-id}.iam.gserviceaccount.com
---
# K8S SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: client-name-config-control/client-name-logging-sa-workload-identity-binding
  name: client-name-logging-sa-workload-identity-binding # kpt-set: ${client-name}-logging-sa-workload-identity-binding
  namespace: client-name-config-control # kpt-set: ${client-name}-${management-namespace}
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|client-name-config-control|client-name-logging-sa-workload-identity-binding'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg'
spec:
  resourceRef:
    name: client-name-logging-sa # kpt-set: ${client-name}-logging-sa
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - member: serviceAccount:management-project-id.svc.id.goog[cnrm-system/cnrm-controller-manager-client-name-logging] # kpt-set: serviceAccount:${management-project-id}.svc.id.goog[cnrm-system/cnrm-controller-manager-${client-name}-logging]
---
# K8S namespace
apiVersion: v1
kind: Namespace
metadata: # kpt-merge: /client-name-logging
  name: client-name-logging # kpt-set: ${client-name}-logging
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: '|Namespace|default|client-name-logging'
---
# Link GCP SA to K8S namespace
apiVersion: core.cnrm.cloud.google.com/v1beta1
kind: ConfigConnectorContext
metadata: # kpt-merge: client-name-logging/configconnectorcontext.core.cnrm.cloud.google.com
  name: configconnectorcontext.core.cnrm.cloud.google.com
  namespace: client-name-logging # kpt-set: ${client-name}-logging
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'core.cnrm.cloud.google.com|ConfigConnectorContext|client-name-logging|configconnectorcontext.core.cnrm.cloud.google.com'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg'
spec:
  googleServiceAccount: client-name-logging-sa@client-management-project-id.iam.gserviceaccount.com # kpt-set: ${client-name}-logging-sa@${client-management-project-id}.iam.gserviceaccount.com
---
# Grant viewer role on the projects namespace to logging K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: client-name-projects/allow-resource-reference-from-logging
  name: allow-resource-reference-from-logging
  namespace: client-name-projects # kpt-set: ${client-name}-projects
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|client-name-projects|allow-resource-reference-from-logging'
roleRef:
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-name-logging # kpt-set: cnrm-controller-manager-${client-name}-logging
    namespace: cnrm-system
    kind: ServiceAccount
